# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.appsec_attack import AppsecAttack

class TestAppsecAttack(unittest.TestCase):
    """AppsecAttack unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppsecAttack:
        """Test AppsecAttack
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppsecAttack`
        """
        model = AppsecAttack()
        if include_optional:
            return AppsecAttack(
                attack = None,
                description = '',
                id = '',
                metadata = cyperf.models.metadata.Metadata(
                    auth_method = cyperf.models.enum.Enum(
                        choices = [
                            cyperf.models.choice.Choice(
                                description = '', 
                                hidden = True, 
                                name = '', 
                                value = '', )
                            ], 
                        default = '', ), 
                    explicit_proxy = True, 
                    idp_type = cyperf.models.enum.Enum(
                        default = '', ), 
                    sgw_name = '', 
                    sgw_type = '', 
                    sgw_type_value = '', ),
                name = '',
                owner = '',
                owner_id = ''
            )
        else:
            return AppsecAttack(
        )
        """

    def testAppsecAttack(self):
        """Test AppsecAttack"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
