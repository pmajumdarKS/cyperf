# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyperf.models.session import Session

class TestSession(unittest.TestCase):
    """Session unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Session:
        """Test Session
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Session`
        """
        model = Session()
        if include_optional:
            return Session(
                application = '',
                config = None,
                config_name = '',
                config_url = '',
                created = 56,
                data_model_url = '',
                id = '',
                index = 56,
                last_visited = 56,
                meta = [
                    cyperf.models.pair.Pair(
                        id = 56, 
                        key = '', 
                        value = '', )
                    ],
                name = '',
                owner = '',
                owner_id = '',
                pinned = True,
                state = '',
                test = cyperf.models.test_info.TestInfo(
                    dashboards = [
                        cyperf.models.dashboard.Dashboard(
                            id = '', 
                            name = '', )
                        ], 
                    default_dashboard_index = 56, 
                    default_polling_interval = 56, 
                    status = '', 
                    test_details = '', 
                    test_duration = 56, 
                    test_elapsed = 56, 
                    test_id = '', 
                    test_initialized = 56, 
                    test_started = 56, 
                    test_stopped = 56, )
            )
        else:
            return Session(
        )
        """

    def testSession(self):
        """Test Session"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
