# coding: utf-8

"""
    CyPerf Application API

    CyPerf REST API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cert_config import CertConfig

class TestCertConfig(unittest.TestCase):
    """CertConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertConfig:
        """Test CertConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertConfig`
        """
        model = CertConfig()
        if include_optional:
            return CertConfig(
                certificate_file = openapi_client.models.params.Params(
                    array_element_type = '', 
                    array_elements = [
                        {
                            'key' : ''
                            }
                        ], 
                    category = '', 
                    category_index = 56, 
                    deprecated_previous_source = '', 
                    description = '', 
                    dictionary_value = {
                        'key' : ''
                        }, 
                    enum = openapi_client.models.params_enum.Params_Enum(
                        choices = [
                            openapi_client.models.choice.Choice(
                                description = '', 
                                hidden = True, 
                                name = '', 
                                value = '', )
                            ], ), 
                    file_value = null, 
                    flow_identifier = True, 
                    is_deprecated = True, 
                    is_modified = True, 
                    media_files = [
                        openapi_client.models.media_file.MediaFile(
                            file_value = null, 
                            media_tracks = [
                                openapi_client.models.media_track.MediaTrack(
                                    bitrate = 56, 
                                    bitrate_kbps = 56, 
                                    codec = '', 
                                    codec_description = '', 
                                    track_id = '', 
                                    track_type = null, 
                                    id = '', )
                                ], 
                            id = '', )
                        ], 
                    metadata = openapi_client.models.param_metadata.ParamMetadata(
                        type_info = openapi_client.models.param_metadata_type_info.ParamMetadata_TypeInfo(
                            array_v2 = openapi_client.models.param_metadata_type_info_array_v2.ParamMetadata_TypeInfo_arrayV2(
                                elements = [
                                    openapi_client.models.param_metadata_type_info_array_v2_elements_inner.ParamMetadata_TypeInfo_arrayV2_elements_inner(
                                        type = '', )
                                    ], ), 
                            int = openapi_client.models.param_metadata_type_info_int.ParamMetadata_TypeInfo_int(
                                max_value = 56, 
                                min_value = 56, ), 
                            media = openapi_client.models.param_metadata_type_info_media.ParamMetadata_TypeInfo_media(
                                track_id = '', 
                                track_type = '', ), 
                            string = openapi_client.models.param_metadata_type_info_string.ParamMetadata_TypeInfo_string(
                                charset = '', 
                                max_length = 56, 
                                min_length = 56, ), ), ), 
                    name = '', 
                    param_id = '', 
                    readonly = True, 
                    source = '', 
                    supported_sources = [
                        ''
                        ], 
                    type = '', 
                    value = '', 
                    file_upload = [
                        'YQ=='
                        ], 
                    id = , 
                    supports_dynamic_payload = True, 
                    upload_url = '', ),
                dh_file = openapi_client.models.params.Params(
                    array_element_type = '', 
                    array_elements = [
                        {
                            'key' : ''
                            }
                        ], 
                    category = '', 
                    category_index = 56, 
                    deprecated_previous_source = '', 
                    description = '', 
                    dictionary_value = {
                        'key' : ''
                        }, 
                    enum = openapi_client.models.params_enum.Params_Enum(
                        choices = [
                            openapi_client.models.choice.Choice(
                                description = '', 
                                hidden = True, 
                                name = '', 
                                value = '', )
                            ], ), 
                    file_value = null, 
                    flow_identifier = True, 
                    is_deprecated = True, 
                    is_modified = True, 
                    media_files = [
                        openapi_client.models.media_file.MediaFile(
                            file_value = null, 
                            media_tracks = [
                                openapi_client.models.media_track.MediaTrack(
                                    bitrate = 56, 
                                    bitrate_kbps = 56, 
                                    codec = '', 
                                    codec_description = '', 
                                    track_id = '', 
                                    track_type = null, 
                                    id = '', )
                                ], 
                            id = '', )
                        ], 
                    metadata = openapi_client.models.param_metadata.ParamMetadata(
                        type_info = openapi_client.models.param_metadata_type_info.ParamMetadata_TypeInfo(
                            array_v2 = openapi_client.models.param_metadata_type_info_array_v2.ParamMetadata_TypeInfo_arrayV2(
                                elements = [
                                    openapi_client.models.param_metadata_type_info_array_v2_elements_inner.ParamMetadata_TypeInfo_arrayV2_elements_inner(
                                        type = '', )
                                    ], ), 
                            int = openapi_client.models.param_metadata_type_info_int.ParamMetadata_TypeInfo_int(
                                max_value = 56, 
                                min_value = 56, ), 
                            media = openapi_client.models.param_metadata_type_info_media.ParamMetadata_TypeInfo_media(
                                track_id = '', 
                                track_type = '', ), 
                            string = openapi_client.models.param_metadata_type_info_string.ParamMetadata_TypeInfo_string(
                                charset = '', 
                                max_length = 56, 
                                min_length = 56, ), ), ), 
                    name = '', 
                    param_id = '', 
                    readonly = True, 
                    source = '', 
                    supported_sources = [
                        ''
                        ], 
                    type = '', 
                    value = '', 
                    file_upload = [
                        'YQ=='
                        ], 
                    id = , 
                    supports_dynamic_payload = True, 
                    upload_url = '', ),
                id = '',
                is_playlist = True,
                key_file = openapi_client.models.params.Params(
                    array_element_type = '', 
                    array_elements = [
                        {
                            'key' : ''
                            }
                        ], 
                    category = '', 
                    category_index = 56, 
                    deprecated_previous_source = '', 
                    description = '', 
                    dictionary_value = {
                        'key' : ''
                        }, 
                    enum = openapi_client.models.params_enum.Params_Enum(
                        choices = [
                            openapi_client.models.choice.Choice(
                                description = '', 
                                hidden = True, 
                                name = '', 
                                value = '', )
                            ], ), 
                    file_value = null, 
                    flow_identifier = True, 
                    is_deprecated = True, 
                    is_modified = True, 
                    media_files = [
                        openapi_client.models.media_file.MediaFile(
                            file_value = null, 
                            media_tracks = [
                                openapi_client.models.media_track.MediaTrack(
                                    bitrate = 56, 
                                    bitrate_kbps = 56, 
                                    codec = '', 
                                    codec_description = '', 
                                    track_id = '', 
                                    track_type = null, 
                                    id = '', )
                                ], 
                            id = '', )
                        ], 
                    metadata = openapi_client.models.param_metadata.ParamMetadata(
                        type_info = openapi_client.models.param_metadata_type_info.ParamMetadata_TypeInfo(
                            array_v2 = openapi_client.models.param_metadata_type_info_array_v2.ParamMetadata_TypeInfo_arrayV2(
                                elements = [
                                    openapi_client.models.param_metadata_type_info_array_v2_elements_inner.ParamMetadata_TypeInfo_arrayV2_elements_inner(
                                        type = '', )
                                    ], ), 
                            int = openapi_client.models.param_metadata_type_info_int.ParamMetadata_TypeInfo_int(
                                max_value = 56, 
                                min_value = 56, ), 
                            media = openapi_client.models.param_metadata_type_info_media.ParamMetadata_TypeInfo_media(
                                track_id = '', 
                                track_type = '', ), 
                            string = openapi_client.models.param_metadata_type_info_string.ParamMetadata_TypeInfo_string(
                                charset = '', 
                                max_length = 56, 
                                min_length = 56, ), ), ), 
                    name = '', 
                    param_id = '', 
                    readonly = True, 
                    source = '', 
                    supported_sources = [
                        ''
                        ], 
                    type = '', 
                    value = '', 
                    file_upload = [
                        'YQ=='
                        ], 
                    id = , 
                    supports_dynamic_payload = True, 
                    upload_url = '', ),
                key_file_password = '',
                playlist_column_name = '',
                playlist_filename = '',
                sni_hostname = ''
            )
        else:
            return CertConfig(
                certificate_file = openapi_client.models.params.Params(
                    array_element_type = '', 
                    array_elements = [
                        {
                            'key' : ''
                            }
                        ], 
                    category = '', 
                    category_index = 56, 
                    deprecated_previous_source = '', 
                    description = '', 
                    dictionary_value = {
                        'key' : ''
                        }, 
                    enum = openapi_client.models.params_enum.Params_Enum(
                        choices = [
                            openapi_client.models.choice.Choice(
                                description = '', 
                                hidden = True, 
                                name = '', 
                                value = '', )
                            ], ), 
                    file_value = null, 
                    flow_identifier = True, 
                    is_deprecated = True, 
                    is_modified = True, 
                    media_files = [
                        openapi_client.models.media_file.MediaFile(
                            file_value = null, 
                            media_tracks = [
                                openapi_client.models.media_track.MediaTrack(
                                    bitrate = 56, 
                                    bitrate_kbps = 56, 
                                    codec = '', 
                                    codec_description = '', 
                                    track_id = '', 
                                    track_type = null, 
                                    id = '', )
                                ], 
                            id = '', )
                        ], 
                    metadata = openapi_client.models.param_metadata.ParamMetadata(
                        type_info = openapi_client.models.param_metadata_type_info.ParamMetadata_TypeInfo(
                            array_v2 = openapi_client.models.param_metadata_type_info_array_v2.ParamMetadata_TypeInfo_arrayV2(
                                elements = [
                                    openapi_client.models.param_metadata_type_info_array_v2_elements_inner.ParamMetadata_TypeInfo_arrayV2_elements_inner(
                                        type = '', )
                                    ], ), 
                            int = openapi_client.models.param_metadata_type_info_int.ParamMetadata_TypeInfo_int(
                                max_value = 56, 
                                min_value = 56, ), 
                            media = openapi_client.models.param_metadata_type_info_media.ParamMetadata_TypeInfo_media(
                                track_id = '', 
                                track_type = '', ), 
                            string = openapi_client.models.param_metadata_type_info_string.ParamMetadata_TypeInfo_string(
                                charset = '', 
                                max_length = 56, 
                                min_length = 56, ), ), ), 
                    name = '', 
                    param_id = '', 
                    readonly = True, 
                    source = '', 
                    supported_sources = [
                        ''
                        ], 
                    type = '', 
                    value = '', 
                    file_upload = [
                        'YQ=='
                        ], 
                    id = , 
                    supports_dynamic_payload = True, 
                    upload_url = '', ),
                dh_file = openapi_client.models.params.Params(
                    array_element_type = '', 
                    array_elements = [
                        {
                            'key' : ''
                            }
                        ], 
                    category = '', 
                    category_index = 56, 
                    deprecated_previous_source = '', 
                    description = '', 
                    dictionary_value = {
                        'key' : ''
                        }, 
                    enum = openapi_client.models.params_enum.Params_Enum(
                        choices = [
                            openapi_client.models.choice.Choice(
                                description = '', 
                                hidden = True, 
                                name = '', 
                                value = '', )
                            ], ), 
                    file_value = null, 
                    flow_identifier = True, 
                    is_deprecated = True, 
                    is_modified = True, 
                    media_files = [
                        openapi_client.models.media_file.MediaFile(
                            file_value = null, 
                            media_tracks = [
                                openapi_client.models.media_track.MediaTrack(
                                    bitrate = 56, 
                                    bitrate_kbps = 56, 
                                    codec = '', 
                                    codec_description = '', 
                                    track_id = '', 
                                    track_type = null, 
                                    id = '', )
                                ], 
                            id = '', )
                        ], 
                    metadata = openapi_client.models.param_metadata.ParamMetadata(
                        type_info = openapi_client.models.param_metadata_type_info.ParamMetadata_TypeInfo(
                            array_v2 = openapi_client.models.param_metadata_type_info_array_v2.ParamMetadata_TypeInfo_arrayV2(
                                elements = [
                                    openapi_client.models.param_metadata_type_info_array_v2_elements_inner.ParamMetadata_TypeInfo_arrayV2_elements_inner(
                                        type = '', )
                                    ], ), 
                            int = openapi_client.models.param_metadata_type_info_int.ParamMetadata_TypeInfo_int(
                                max_value = 56, 
                                min_value = 56, ), 
                            media = openapi_client.models.param_metadata_type_info_media.ParamMetadata_TypeInfo_media(
                                track_id = '', 
                                track_type = '', ), 
                            string = openapi_client.models.param_metadata_type_info_string.ParamMetadata_TypeInfo_string(
                                charset = '', 
                                max_length = 56, 
                                min_length = 56, ), ), ), 
                    name = '', 
                    param_id = '', 
                    readonly = True, 
                    source = '', 
                    supported_sources = [
                        ''
                        ], 
                    type = '', 
                    value = '', 
                    file_upload = [
                        'YQ=='
                        ], 
                    id = , 
                    supports_dynamic_payload = True, 
                    upload_url = '', ),
                id = '',
                key_file = openapi_client.models.params.Params(
                    array_element_type = '', 
                    array_elements = [
                        {
                            'key' : ''
                            }
                        ], 
                    category = '', 
                    category_index = 56, 
                    deprecated_previous_source = '', 
                    description = '', 
                    dictionary_value = {
                        'key' : ''
                        }, 
                    enum = openapi_client.models.params_enum.Params_Enum(
                        choices = [
                            openapi_client.models.choice.Choice(
                                description = '', 
                                hidden = True, 
                                name = '', 
                                value = '', )
                            ], ), 
                    file_value = null, 
                    flow_identifier = True, 
                    is_deprecated = True, 
                    is_modified = True, 
                    media_files = [
                        openapi_client.models.media_file.MediaFile(
                            file_value = null, 
                            media_tracks = [
                                openapi_client.models.media_track.MediaTrack(
                                    bitrate = 56, 
                                    bitrate_kbps = 56, 
                                    codec = '', 
                                    codec_description = '', 
                                    track_id = '', 
                                    track_type = null, 
                                    id = '', )
                                ], 
                            id = '', )
                        ], 
                    metadata = openapi_client.models.param_metadata.ParamMetadata(
                        type_info = openapi_client.models.param_metadata_type_info.ParamMetadata_TypeInfo(
                            array_v2 = openapi_client.models.param_metadata_type_info_array_v2.ParamMetadata_TypeInfo_arrayV2(
                                elements = [
                                    openapi_client.models.param_metadata_type_info_array_v2_elements_inner.ParamMetadata_TypeInfo_arrayV2_elements_inner(
                                        type = '', )
                                    ], ), 
                            int = openapi_client.models.param_metadata_type_info_int.ParamMetadata_TypeInfo_int(
                                max_value = 56, 
                                min_value = 56, ), 
                            media = openapi_client.models.param_metadata_type_info_media.ParamMetadata_TypeInfo_media(
                                track_id = '', 
                                track_type = '', ), 
                            string = openapi_client.models.param_metadata_type_info_string.ParamMetadata_TypeInfo_string(
                                charset = '', 
                                max_length = 56, 
                                min_length = 56, ), ), ), 
                    name = '', 
                    param_id = '', 
                    readonly = True, 
                    source = '', 
                    supported_sources = [
                        ''
                        ], 
                    type = '', 
                    value = '', 
                    file_upload = [
                        'YQ=='
                        ], 
                    id = , 
                    supports_dynamic_payload = True, 
                    upload_url = '', ),
                sni_hostname = '',
        )
        """

    def testCertConfig(self):
        """Test CertConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
